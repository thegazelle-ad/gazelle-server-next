import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Navigation from '../components/Navigation'

const Home: NextPage = () => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        {/* ${head.title} */}
        {/* <meta name="description" content="Generated by create next app" /> */}
        {/* <link rel="icon" href="/favicon.ico" /> */}

        {/* <link rel="stylesheet"
          type="text/css" href="/static/build/main.css?h=${cssHash}"/> */}
        {/* <link rel="icon" type="image/x-icon" href="https://thegazelle.s3.amazonaws.com/gazelle/2016/02/favicon.ico"/>
        <link rel="apple-touch-icon" sizes="180x180" href="https://thegazelle.s3.amazonaws.com/gazelle/2016/02/apple-touch-icon.png"/>
        <link rel="icon" type="image/png" href="https://thegazelle.s3.amazonaws.com/gazelle/2016/02/favicon-32x32.png" sizes="32x32"/>
        <link rel="icon" type="image/png" href="https://thegazelle.s3.amazonaws.com/gazelle/2016/02/favicon-16x16.png" sizes="16x16"/>
        <link rel="manifest" href="https://s3.amazonaws.com/thegazelle/favicons/manifest.json"/>
        <link rel="mask-icon" href="https://s3.amazonaws.com/thegazelle/favicons/safari-pinned-tab.svg" color="#5bbad5"/>
        <meta name="theme-color" content="#ffffff">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        ${head.meta} */}
      </Head>

      <main className={styles.main}>
          <body>
            {/* <script>
              var _initialCache = ${JSON.stringify(cache)};
            </script> */}
            {/* <script src="/static/build/main-client.js?h=${clientScriptHash}"></script> */}

            <div className="app-container">
              <div className="app-container__header">
                <Navigation navigationData={navigationData} />
              </div>
              <div className="app-container__body">
                {/* <ReactTransitionGroup
                  transitionName="global-loader"
                  transitionEnterTimeout={1000}
                  transitionLeaveTimeout={3000}
                  component={TransitionManager}
                >
                  {React.cloneElement(this.props.children, { key: transitionKey })}
                </ReactTransitionGroup> */}
              </div>
              <div className="app-container__footer">
                {/* <Footer /> */}
              </div>
            </div>

          </body>
      </main>
      <footer className={styles.footer}>
      </footer>
    </div>
  )
}

export default Home
